{"version":3,"file":"static/js/730.354f52e1.chunk.js","mappings":"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","sources":["routes.js","components/AppContent.js","components/AppFooter.js","components/AppHeader.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst RestApiDashboard = React.lazy(() => import('./views/rest-api-single/RestApiDashboard'))\nconst RestApiBatchDashboard = React.lazy(\n  () => import('./views/rest-api-batch/RestApiBatchDashboard'),\n)\nconst WebsocketDashboard = React.lazy(() => import('./views/websocket/WebsocketView'))\n\nconst routes = [\n  { path: '/ui/', exact: true, name: 'Home' },\n  { path: '/ui/rest-api-single', name: 'Dashboard', element: RestApiDashboard },\n  { path: '/ui/rest-api-batch', name: 'Dashboard', element: RestApiBatchDashboard },\n  { path: '/ui/websocket', name: 'Dashboard', element: WebsocketDashboard },\n]\n\nexport default routes\n","import React, { Suspense } from 'react'\r\nimport { Navigate, Route, Routes } from 'react-router-dom'\r\nimport { CContainer, CSpinner } from '@coreui/react'\r\n\r\n// routes config\r\nimport routes from '../routes'\r\n\r\nconst AppContent = () => {\r\n  return (\r\n    <CContainer className=\"px-4\" lg>\r\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\r\n        <Routes>\r\n          {routes.map((route, idx) => {\r\n            return (\r\n              route.element && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  element={<route.element />}\r\n                />\r\n              )\r\n            )\r\n          })}\r\n          <Route path=\"*\" element={<Navigate to=\"/ui/rest-api-single\" replace />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </CContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppContent)\r\n","import React from 'react'\r\nimport { CFooter } from '@coreui/react'\r\n\r\nconst AppFooter = () => {\r\n  return (\r\n    <CFooter className=\"px-4\">\r\n      <div className=\"ms-auto\">\r\n        <span className=\"me-1\">Powered by</span>\r\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          CoreUI React Admin &amp; Dashboard Template\r\n        </a>\r\n      </div>\r\n    </CFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppFooter)\r\n","import React, { useEffect, useRef } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderNav,\n  CAvatar,\n  CDropdown,\n  CDropdownToggle,\n  CNavLink,\n  CNavItem,\n  useColorModes,\n  CDropdownMenu,\n  CDropdownItem,\n} from '@coreui/react'\n\nimport alexandriaProjectLogo from '../assets/images/alexandria-project-logo.jpg'\nimport CIcon from '@coreui/icons-react'\nimport { cilContrast, cilMoon, cilSun } from '@coreui/icons'\nimport { useDispatch } from 'react-redux'\n\nconst AppHeader = () => {\n  const headerRef = useRef()\n  const { colorMode, setColorMode } = useColorModes('coreui-free-react-admin-template-theme')\n  const dispatch = useDispatch()\n\n  const setTheme = (colorMode) => {\n    setColorMode(colorMode)\n    dispatch({ type: 'set', theme: colorMode })\n  }\n  useEffect(() => {\n    document.addEventListener('scroll', () => {\n      headerRef.current &&\n        headerRef.current.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0)\n    })\n  }, [])\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4 p-0\" ref={headerRef}>\n      <CContainer className=\"border-bottom px-4\" fluid>\n        <CHeaderNav className=\"\">\n          <CNavItem>\n            <CAvatar src={alexandriaProjectLogo} size=\"md\" />\n          </CNavItem>\n          &nbsp;\n          <CNavItem>\n            <CNavLink to=\"/ui/rest-api-single\" component={NavLink}>\n              Rest API - Single\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/ui/rest-api-batch\">Rest API - Batch</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/ui/websocket\">Websocket</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n\n        <CHeaderNav>\n          <li className=\"nav-item py-1\">\n            <div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\n          </li>\n          <CDropdown variant=\"nav-item\" placement=\"bottom-end\">\n            <CDropdownToggle caret={false}>\n              &nbsp;Theme: &nbsp;&nbsp;\n              {colorMode === 'dark' ? (\n                <CIcon icon={cilMoon} size=\"lg\" />\n              ) : colorMode === 'auto' ? (\n                <CIcon icon={cilContrast} size=\"lg\" />\n              ) : (\n                <CIcon icon={cilSun} size=\"lg\" />\n              )}\n            </CDropdownToggle>\n            <CDropdownMenu>\n              <CDropdownItem\n                active={colorMode === 'light'}\n                className=\"d-flex align-items-center\"\n                component=\"button\"\n                type=\"button\"\n                onClick={() => setTheme('light')}\n              >\n                <CIcon className=\"me-2\" icon={cilSun} size=\"lg\" /> Light\n              </CDropdownItem>\n              <CDropdownItem\n                active={colorMode === 'dark'}\n                className=\"d-flex align-items-center\"\n                component=\"button\"\n                type=\"button\"\n                onClick={() => setTheme('dark')}\n              >\n                <CIcon className=\"me-2\" icon={cilMoon} size=\"lg\" /> Dark\n              </CDropdownItem>\n              <CDropdownItem\n                active={colorMode === 'auto'}\n                className=\"d-flex align-items-center\"\n                component=\"button\"\n                type=\"button\"\n                onClick={() => setTheme('auto')}\n              >\n                <CIcon className=\"me-2\" icon={cilContrast} size=\"lg\" /> Auto\n              </CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n        </CHeaderNav>\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\r\nimport { AppContent, AppFooter, AppHeader } from '../components/index'\r\n\r\nconst DefaultLayout = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper d-flex flex-column min-vh-100\">\r\n        <AppHeader />\r\n        <div className=\"body flex-grow-1\">\r\n          <AppContent />\r\n        </div>\r\n        <AppFooter />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DefaultLayout\r\n"],"names":["path","exact","name","element","React","AppContent","_jsx","CContainer","className","lg","children","Suspense","fallback","CSpinner","color","_jsxs","Routes","routes","map","route","idx","Route","Navigate","to","replace","AppFooter","CFooter","href","target","rel","AppHeader","headerRef","useRef","colorMode","setColorMode","useColorModes","dispatch","useDispatch","setTheme","type","theme","useEffect","document","addEventListener","current","classList","toggle","documentElement","scrollTop","CHeader","position","ref","fluid","CHeaderNav","CNavItem","CAvatar","src","alexandriaProjectLogo","size","CNavLink","component","NavLink","CDropdown","variant","placement","CDropdownToggle","caret","CIcon","icon","cilMoon","cilContrast","cilSun","CDropdownMenu","CDropdownItem","active","onClick","DefaultLayout"],"sourceRoot":""}