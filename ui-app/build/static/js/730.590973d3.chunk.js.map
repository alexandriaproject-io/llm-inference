{"version":3,"file":"static/js/730.590973d3.chunk.js","mappings":"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","sources":["routes.js","components/AppContent.js","components/AppFooter.js","components/AppHeader.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\r\nconst RestApiDashboard = React.lazy(() => import('./views/rest-api-single/RestApiDashboard'))\r\n\r\nconst routes = [\r\n  { path: '/ui/', exact: true, name: 'Home' },\r\n  { path: '/ui/rest-api-single', name: 'Dashboard', element: RestApiDashboard },\r\n  { path: '/ui/websocket', name: 'Dashboard', element: Dashboard },\r\n]\r\n\r\nexport default routes\r\n","import React, { Suspense } from 'react'\r\nimport { Navigate, Route, Routes } from 'react-router-dom'\r\nimport { CContainer, CSpinner } from '@coreui/react'\r\n\r\n// routes config\r\nimport routes from '../routes'\r\n\r\nconst AppContent = () => {\r\n  return (\r\n    <CContainer className=\"px-4\" lg>\r\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\r\n        <Routes>\r\n          {routes.map((route, idx) => {\r\n            return (\r\n              route.element && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  element={<route.element />}\r\n                />\r\n              )\r\n            )\r\n          })}\r\n          <Route path=\"*\" element={<Navigate to=\"/ui/rest-api-single\" replace />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </CContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppContent)\r\n","import React from 'react'\r\nimport { CFooter } from '@coreui/react'\r\n\r\nconst AppFooter = () => {\r\n  return (\r\n    <CFooter className=\"px-4\">\r\n      <div className=\"ms-auto\">\r\n        <span className=\"me-1\">Powered by</span>\r\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          CoreUI React Admin &amp; Dashboard Template\r\n        </a>\r\n      </div>\r\n    </CFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppFooter)\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {\r\n  CContainer,\r\n  CHeader,\r\n  CHeaderNav,\r\n  CAvatar,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CNavLink,\r\n  CNavItem,\r\n  useColorModes,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n} from '@coreui/react'\r\n\r\nimport alexandriaProjectLogo from '../assets/images/alexandria-project-logo.jpg'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilContrast, cilMoon, cilSun } from '@coreui/icons'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst AppHeader = () => {\r\n  const headerRef = useRef()\r\n  const { colorMode, setColorMode } = useColorModes('coreui-free-react-admin-template-theme')\r\n  const dispatch = useDispatch()\r\n\r\n  const setTheme = (colorMode) => {\r\n    setColorMode(colorMode)\r\n    dispatch({ type: 'set', theme: colorMode })\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', () => {\r\n      headerRef.current &&\r\n        headerRef.current.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <CHeader position=\"sticky\" className=\"mb-4 p-0\" ref={headerRef}>\r\n      <CContainer className=\"border-bottom px-4\" fluid>\r\n        <CHeaderNav className=\"\">\r\n          <CNavItem>\r\n            <CAvatar src={alexandriaProjectLogo} size=\"md\" />\r\n          </CNavItem>\r\n          &nbsp;\r\n          <CNavItem>\r\n            <CNavLink to=\"/ui/rest-api-single\" component={NavLink}>\r\n              Rest API - Single\r\n            </CNavLink>\r\n          </CNavItem>\r\n          <CNavItem>\r\n            <CNavLink href=\"#\">Rest API - Batch</CNavLink>\r\n          </CNavItem>\r\n          <CNavItem>\r\n            <CNavLink href=\"#\">Websocket</CNavLink>\r\n          </CNavItem>\r\n        </CHeaderNav>\r\n\r\n        <CHeaderNav>\r\n          <li className=\"nav-item py-1\">\r\n            <div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\r\n          </li>\r\n          <CDropdown variant=\"nav-item\" placement=\"bottom-end\">\r\n            <CDropdownToggle caret={false}>\r\n              &nbsp;Theme: &nbsp;&nbsp;\r\n              {colorMode === 'dark' ? (\r\n                <CIcon icon={cilMoon} size=\"lg\" />\r\n              ) : colorMode === 'auto' ? (\r\n                <CIcon icon={cilContrast} size=\"lg\" />\r\n              ) : (\r\n                <CIcon icon={cilSun} size=\"lg\" />\r\n              )}\r\n            </CDropdownToggle>\r\n            <CDropdownMenu>\r\n              <CDropdownItem\r\n                active={colorMode === 'light'}\r\n                className=\"d-flex align-items-center\"\r\n                component=\"button\"\r\n                type=\"button\"\r\n                onClick={() => setTheme('light')}\r\n              >\r\n                <CIcon className=\"me-2\" icon={cilSun} size=\"lg\" /> Light\r\n              </CDropdownItem>\r\n              <CDropdownItem\r\n                active={colorMode === 'dark'}\r\n                className=\"d-flex align-items-center\"\r\n                component=\"button\"\r\n                type=\"button\"\r\n                onClick={() => setTheme('dark')}\r\n              >\r\n                <CIcon className=\"me-2\" icon={cilMoon} size=\"lg\" /> Dark\r\n              </CDropdownItem>\r\n              <CDropdownItem\r\n                active={colorMode === 'auto'}\r\n                className=\"d-flex align-items-center\"\r\n                component=\"button\"\r\n                type=\"button\"\r\n                onClick={() => setTheme('auto')}\r\n              >\r\n                <CIcon className=\"me-2\" icon={cilContrast} size=\"lg\" /> Auto\r\n              </CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CHeaderNav>\r\n      </CContainer>\r\n    </CHeader>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport { AppContent, AppFooter, AppHeader } from '../components/index'\r\n\r\nconst DefaultLayout = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper d-flex flex-column min-vh-100\">\r\n        <AppHeader />\r\n        <div className=\"body flex-grow-1\">\r\n          <AppContent />\r\n        </div>\r\n        <AppFooter />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DefaultLayout\r\n"],"names":["Dashboard","React","path","exact","name","element","AppContent","_jsx","CContainer","className","lg","children","Suspense","fallback","CSpinner","color","_jsxs","Routes","routes","map","route","idx","Route","Navigate","to","replace","AppFooter","CFooter","href","target","rel","AppHeader","headerRef","useRef","colorMode","setColorMode","useColorModes","dispatch","useDispatch","setTheme","type","theme","useEffect","document","addEventListener","current","classList","toggle","documentElement","scrollTop","CHeader","position","ref","fluid","CHeaderNav","CNavItem","CAvatar","src","alexandriaProjectLogo","size","CNavLink","component","NavLink","CDropdown","variant","placement","CDropdownToggle","caret","CIcon","icon","cilMoon","cilContrast","cilSun","CDropdownMenu","CDropdownItem","active","onClick","DefaultLayout"],"sourceRoot":""}