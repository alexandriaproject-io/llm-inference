{"version":3,"file":"static/js/865.9e51b625.chunk.js","mappings":"4TAcO,MAAMA,EAA0B,WAAqB,IAApBC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnD,MAAO,CACLG,UAAW,CACTC,UAAW,EACXC,WAAW,EACXC,YAAa,EACbC,MAAO,EACPC,MAAO,GACPC,eAAgB,IAChBC,mBAAoB,EACpBC,eAAgB,KACZZ,EAAUI,WAAa,CAAC,GAE9BS,cAAe,CACbC,eAAe,EACfC,gBAAgB,KACZf,EAAUa,eAAiB,CAAC,GAGtC,EAmPA,EAjPyBG,IAKlB,IALmB,SACxBC,EAAWA,MAAe,cAC1BC,GAAa,EAAK,cAClBC,EAAgB,CAAC,EAAC,OAClBC,EAAS,CAAC,GACXJ,EACC,MAAOK,EAAaC,IAAkBC,EAAAA,EAAAA,UAASxB,EAAwBoB,KAEvEK,EAAAA,EAAAA,YAAU,KACRC,EAAoB,CAAC,EAAE,GACtB,IAEH,MAAMC,EAAeA,KAAA,IAChBL,EAAYjB,cACL,OAANgB,QAAM,IAANA,OAAM,EAANA,EAAQhB,YAAa,CAAC,IAEtBuB,EAAmBA,KAAA,IACpBN,EAAYR,kBACL,OAANO,QAAM,IAANA,OAAM,EAANA,EAAQP,gBAAiB,CAAC,IAG1BY,EAAuBG,IAC3B,MAAMC,EAAgB,CACpBzB,UAAW,IACNiB,EAAYjB,aACZwB,EAAUxB,WAEfS,cAAe,IACVQ,EAAYR,iBACZe,EAAUf,gBAGjBS,EAAeO,GACfZ,EAASY,EAAc,EAGnBC,EAAgB1B,IACpBqB,EAAoB,CAAErB,aAAY,EAG9B2B,EAAoBlB,IACxBY,EAAoB,CAAEZ,iBAAgB,EAGxC,OACEmB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAU,QAAOC,SAAA,EACtBH,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAAAD,SAAA,CAAC,sBAEXE,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNC,MAAM,YACNC,KAAK,KACLN,UAAU,YACVO,QAASA,KACP,MAAMC,EAAW3C,EAAwBoB,GACzCG,EAAeoB,GACfzB,EAASyB,EAAS,EAClBP,SACH,uBAIHH,EAAAA,EAAAA,MAACW,EAAAA,EAAS,CAAAR,SAAA,EACRE,EAAAA,EAAAA,KAAA,SAAAF,UACEE,EAAAA,EAAAA,KAAA,YAEFL,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAAAT,SAAA,EACHE,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,UACVH,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAACb,UAAU,OAAMC,SAAA,EAC3BH,EAAAA,EAAAA,MAACgB,EAAAA,EAAe,CAACC,MAAO,CAAEC,MAAO,KAAMf,SAAA,CAAC,kBACxBE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,kBAExBE,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTC,YAAY,cACZC,KAAK,SACLC,MAAO5B,IAAenB,YACtBU,SAAWsC,IACT,MAAMD,EAAQE,WAAWD,EAAEE,OAAOH,QAAU,EAC5CxB,EAAa,CAAEvB,YAAa+C,EAAQ,EAAI,EAAIA,GAAQ,UAK5DjB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,UACVH,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAACb,UAAU,OAAMC,SAAA,EAC3BH,EAAAA,EAAAA,MAACgB,EAAAA,EAAe,CAACC,MAAO,CAAEC,MAAO,KAAMf,SAAA,CAAC,qBACrBE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,gBAE3BE,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTC,YAAY,iBACZC,KAAK,SACLC,MAAO5B,IAAehB,eACtBO,SAAWsC,IACT,MAAMD,EAAQI,SAASH,EAAEE,OAAOH,QAAU,EAC1CxB,EAAa,CAAEpB,eAAgB4C,EAAQ,EAAI,EAAIA,GAAQ,aAMjEtB,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAAAT,SAAA,EACHE,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,UACVH,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAACb,UAAU,OAAMC,SAAA,EAC3BH,EAAAA,EAAAA,MAACgB,EAAAA,EAAe,CAACC,MAAO,CAAEC,MAAO,KAAMf,SAAA,CAAC,sBACpBE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,gBAE5BE,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTC,YAAY,YACZC,KAAK,SACLC,MAAO5B,IAAerB,UACtBY,SAAWsC,IACT,MAAMD,EAAQI,SAASH,EAAEE,OAAOH,QAAU,EAC1CxB,EAAa,CAAEzB,UAAWiD,EAAQ,EAAI,EAAIA,GAAQ,UAK1DjB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,UACVE,EAAAA,EAAAA,KAACU,EAAAA,EAAW,CAACb,UAAU,OAAMC,UAC3BE,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CACTV,MAAO,CAAEW,OAAQ,WACjBC,QAASnC,IAAepB,UACxBW,SAAWsC,GAAMzB,EAAa,CAAExB,YAAaiD,EAAEE,OAAOI,UACtD3B,UAAU,OACVmB,KAAK,WACLS,GAAG,WACHC,OAAO1B,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAEW,OAAQ,WAAYzB,SAAC,iCAKnDH,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAAAT,SAAA,EACHE,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,UACVH,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAACb,UAAU,OAAMC,SAAA,EAC3BH,EAAAA,EAAAA,MAACgB,EAAAA,EAAe,CAACC,MAAO,CAAEC,MAAO,KAAMf,SAAA,CAAC,cAC5BE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,kBAEpBE,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTC,YAAY,QACZC,KAAK,SACLC,MAAO5B,IAAelB,MACtBS,SAAWsC,IACT,MAAMD,EAAQE,WAAWD,EAAEE,OAAOH,QAAU,EAC5CxB,EAAa,CAAEtB,MAAO8C,EAAQ,EAAI,EAAIA,GAAQ,UAKtDjB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,UACVH,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAACb,UAAU,OAAMC,SAAA,EAC3BH,EAAAA,EAAAA,MAACgB,EAAAA,EAAe,CAACC,MAAO,CAAEC,MAAO,KAAMf,SAAA,CAAC,cAC5BE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,gBAEpBE,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTC,YAAY,QACZC,KAAK,SACLC,MAAO5B,IAAejB,MACtBQ,SAAWsC,IACT,MAAMD,EAAQI,SAASH,EAAEE,OAAOH,QAAU,EAC1CxB,EAAa,CAAErB,MAAO6C,EAAQ,EAAI,EAAIA,GAAQ,aAMxDtB,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAAAT,SAAA,EACHE,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,UACVH,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAACb,UAAU,OAAMC,SAAA,EAC3BH,EAAAA,EAAAA,MAACgB,EAAAA,EAAe,CAACC,MAAO,CAAEC,MAAO,KAAMf,SAAA,CAAC,yBACjBE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,kBAE/BE,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTC,YAAY,qBACZC,KAAK,SACLC,MAAO5B,IAAef,mBACtBM,SAAWsC,IACT,MAAMD,EAAQE,WAAWD,EAAEE,OAAOH,QAAU,EAC5CxB,EAAa,CAAEnB,mBAAoB2C,EAAQ,KAAW,KAAWA,GAAQ,UAKjFjB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,UACVH,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAACb,UAAU,OAAMC,SAAA,EAC3BH,EAAAA,EAAAA,MAACgB,EAAAA,EAAe,CAACC,MAAO,CAAEC,MAAO,KAAMf,SAAA,CAAC,qBACrBE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,kBAE3BE,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTC,YAAY,iBACZC,KAAK,SACLC,MAAO5B,IAAed,eACtBK,SAAWsC,IACT,MAAMD,EAAQE,WAAWD,EAAEE,OAAOH,QAAU,EAC5CxB,EAAa,CAAElB,eAAgB0C,EAAQ,EAAI,EAAIA,GAAQ,aAMjEtB,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAAAT,SAAA,EACHE,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,UACVE,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CACTV,MAAO,CAAEW,OAAQ,WACjBC,QAASlC,IAAmBb,cAC5BG,SAAWsC,GAAMxB,EAAiB,CAAEjB,cAAeyC,EAAEE,OAAOI,UAC5D3B,UAAU,OACVmB,KAAK,WACLS,GAAG,qBACHC,OACE1B,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAEW,OAAQ,WAAYzB,SAAC,sDAM1CE,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,GAAI,EAAEX,SACTjB,IACCmB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CACTV,MAAO,CAAEW,OAAQ,WACjBC,QAASlC,IAAmBZ,eAC5BE,SAAWsC,GAAMxB,EAAiB,CAAEhB,eAAgBwC,EAAEE,OAAOI,UAC7D3B,UAAU,OACVmB,KAAK,WACLS,GAAG,mBACHC,OACE1B,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAEW,OAAQ,WAAYzB,SAAC,yEAS9CE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,2BAA0BC,SACT,IAA7BT,IAAerB,WAAmB,kDAGjC,C,oLCxQZ,MAsDA,EAtDuBW,IAA8B,IAA7B,UAAEgD,EAAS,SAAEC,GAAUjD,EAC7C,MAAOkD,EAAaC,IAAkB5C,EAAAA,EAAAA,WAAS,GACzC6C,GAAQC,EAAAA,EAAAA,KAAYC,IAAgB,IAAf,MAAEF,GAAOE,EAClC,MAAiB,SAAVF,EACHG,OAAOC,WAAW,gCAAgCC,QAChD,OACA,QACFL,CAAK,IAELM,EAAa,CAEjBC,KAAMC,IAAyB,IAAxB,KAAEC,KAASC,GAAOF,EACvB,OACEvC,EAAAA,EAAAA,KAAA,QAAAF,UACEE,EAAAA,EAAAA,KAAC0C,EAAAA,EAAiB,CAACC,SAAUF,EAAME,SAAU/B,MAAiB,SAAVmB,EAAmBa,EAAAA,EAAWC,EAAAA,EAAM/C,SACrF2C,EAAM3C,YAEJ,GAIb,OACEH,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAU,QAAOC,SAAA,EACtBE,EAAAA,EAAAA,KAACD,EAAAA,EAAW,CAAAD,UACVH,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAAAT,SAAA,EACHH,EAAAA,EAAAA,MAACa,EAAAA,EAAI,CAACsC,GAAI,EAAEhD,SAAA,EACVE,EAAAA,EAAAA,KAAA,OAAAF,SAAK,4BACLE,EAAAA,EAAAA,KAAA,SAAAF,SAAQ6B,QAEV3B,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACsC,GAAI,EAAEhD,UACVE,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNE,KAAK,KACLD,MAAO2B,EAAc,OAAS,QAC9BhC,UAAU,iBACVO,QAASA,IAAM0B,GAAgBD,GAAa/B,SAE3C+B,EAAc,gBAAkB,8BAKzC7B,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAAAR,SACP+B,GACC7B,EAAAA,EAAAA,KAAA,QAAMH,UAAU,eAAcC,SAAE8B,KAEhC5B,EAAAA,EAAAA,KAAC+C,EAAAA,EAAa,CAACV,WAAYA,EAAYW,UAAQ,EAACnD,UAAU,eAAcC,SACrE8B,EAASqB,QAAQ,KAAM,cAIxB,C,6DCxCZ,QAhBA,WACE,MAAOC,EAASC,IAAcjE,EAAAA,EAAAA,UAAS,GAYvC,OAVAC,EAAAA,EAAAA,YAAU,KACR,MAAMiE,GAAY,IAAIC,MAAOC,UACvBC,EAAWC,aAAY,KAC3BL,GAAYD,IAAY,IAAIG,MAAOC,UAAYF,GAAU,GACxD,IAGH,MAAO,IAAMK,cAAcF,EAAS,GACnC,KAEIvD,EAAAA,EAAAA,KAAA0D,EAAAA,SAAA,CAAA5D,UAAIoD,EAAU,KAAMS,QAAQ,IACrC,C,iICZA,MAAMC,EAAcC,IAClB,OAAQA,GACN,IAAK,aACH,MAAO,SACT,IAAK,YACH,MAAO,QACT,IAAK,SACH,MAAO,OACT,IAAK,QACH,MAAO,MACT,QACE,MAAO,GACX,EAGIC,EAAiB,CAAC,EAgIxB,EA9HyBnF,IAQlB,IARmB,MACxBoF,EAAK,aACLC,EAAeA,MAAe,aAC9BC,EAAYA,MAAe,WAC3BC,EAAUA,MAAe,WACzBC,EAAUA,MAAe,aACzBC,EAAYA,MAAe,YAC3BC,EAAWA,MACb,IAAC1F,EACC,MAAO2F,EAAcC,IAAmBrF,EAAAA,EAAAA,WAASsF,EAAAA,EAAAA,OAC1CC,EAAIC,IAASxF,EAAAA,EAAAA,UAAS,OACtB2E,EAAUc,IAAezF,EAAAA,EAAAA,UAAS,cAGzC4E,EAAeQ,GAAgB,CAC7BN,eACAC,YACAC,UACAC,UACAC,YACAC,YAGF,MAAMO,EAAeC,IAAW,IAADC,EAC7B,IAAIC,EAAOF,EAAME,KACjB,IACEA,EAAOC,KAAKC,MAAMJ,EAAME,KAC1B,CAAE,MAAO7D,GAAI,CACe,QAA5B4D,EAAAhB,EAAeQ,UAAa,IAAAQ,GAA5BA,EAA8BV,UAAUW,EAAMF,EAAM,EAGhDK,EAAeT,IACfA,IACFA,EAAGU,oBAAoB,UAAWP,GAClCH,EAAGW,QACHV,EAAM,MACR,EAGIW,EAAaC,IACjBX,EAAYW,GACZjB,EAASiB,EAAO,EAmClB,OAhCAnG,EAAAA,EAAAA,YAAU,KAAO,IAADoG,EACd,MAAMC,EAAS,IAAIC,UAAU1B,GAyB7B,OAxBAsB,EAAU,cACVG,EAAOF,OAAS,aAChBZ,EAAMc,GACsB,QAA5BD,EAAAzB,EAAeQ,UAAa,IAAAiB,GAA5BA,EAA8BvB,aAAawB,EAAQlB,GAEnDkB,EAAOE,iBAAiB,QAAQ,SAAUb,GAAQ,IAADc,EAC/CN,EAAU,aACVG,EAAOF,OAAS,YACY,QAA5BK,EAAA7B,EAAeQ,UAAa,IAAAqB,GAA5BA,EAA8B1B,UAAUuB,EAAQlB,EAClD,IAEAkB,EAAOE,iBAAiB,SAAS,SAAUb,GAAQ,IAADe,EAC9B,eAAlBJ,EAAOF,QAA6C,YAAlBE,EAAOF,QAAwBD,EAAU,UAC3EG,EAAOF,OAAS,SACY,QAA5BM,EAAA9B,EAAeQ,UAAa,IAAAsB,GAA5BA,EAA8BzB,QAAQqB,EAAQlB,EAChD,IAEAkB,EAAOE,iBAAiB,SAAS,SAAUb,GAAQ,IAADgB,EAChDL,EAAOF,OAAS,QAChBD,EAAU,SACkB,QAA5BQ,EAAA/B,EAAeQ,UAAa,IAAAuB,GAA5BA,EAA8B3B,QAAQsB,EAAQlB,EAChD,IAEAkB,EAAOE,iBAAiB,UAAWd,GAC5B,YACEd,EAAeQ,GACtBY,EAAYT,EAAG,CAChB,GACA,CAACH,KAGFtE,EAAAA,EAAAA,KAACJ,EAAAA,EAAK,CAACC,UAAU,QAAOC,UACtBH,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAACa,MAAO,CAAEkF,WAAY,QAAShG,SAAA,CAAC,0BAE1CE,EAAAA,EAAAA,KAAA,UACEY,MAAO,CACLV,MAAO0D,EAAWC,IAClB/D,SAED+D,IAEW,cAAbA,IACC7D,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNE,KAAK,KACLD,MAAM,SACNL,UAAU,iBACVO,QAASA,IAAM8E,EAAYT,GAAI3E,SAChC,WAIY,UAAb+D,GAAqC,cAAbA,KACxB7D,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNE,KAAK,KACLD,MAAM,YACNL,UAAU,iBACVO,QAASA,KACPqE,EAAGa,OAAS,UACZf,GAAgBC,EAAAA,EAAAA,KAAS,EACzB1E,SACH,eAIY,WAAb+D,GAAsC,eAAbA,KACzB7D,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNE,KAAK,KACL4F,SAAuB,eAAblC,EACV3D,MAAM,UACNL,UAAU,iBACVO,QAASA,IAAMmE,GAAgBC,EAAAA,EAAAA,MAAU1E,SAE3B,WAAb+D,EAAwB,UAAY,sBAIrC,E,6HC3HZ,MAAMmC,EAAW9D,OAAO+D,SAASC,KAAKC,MAAM,KAAK,GAAK,KAAOjE,OAAO+D,SAASG,KACvEC,EAAW,GAAAC,OAAGC,CAAAA,SAAAA,aAAAA,WAAAA,IAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,oBAAsBR,EAAQ,WAAU/C,QAAQ,SAAU,MA8X1F,EA5XsBwD,KACpB,MAAOC,EAAkBtH,IAAuBF,EAAAA,EAAAA,UAAS,CAAC,IACnDuF,EAAIC,IAASxF,EAAAA,EAAAA,UAAS,OACtB2E,EAAUc,IAAezF,EAAAA,EAAAA,UAAS,eAElCyH,EAASC,IAAc1H,EAAAA,EAAAA,UAAS,CACrC,CACE2H,OAAQ,+DACRC,YAAYtC,EAAAA,EAAAA,KACZ5C,SAAU,GACVH,IAAI+C,EAAAA,EAAAA,SAIDuC,EAAQC,IAAa9H,EAAAA,EAAAA,WAAS,IAC9B+H,EAAcC,IAAmBhI,EAAAA,EAAAA,WAAS,IAC1CiI,EAAWC,IAAgBlI,EAAAA,EAAAA,WAAS,IACpCmI,EAAaC,IAAkBpI,EAAAA,EAAAA,WAAS,IACxCqI,EAAUC,IAAetI,EAAAA,EAAAA,WAAS,IAElCuI,EAAkBC,IAAuBxI,EAAAA,EAAAA,WAAS,IAClDyI,EAAeC,IAAoB1I,EAAAA,EAAAA,UAAS,KAC5C2I,EAAkBC,IAAuB5I,EAAAA,EAAAA,UAAS,IAClD6I,EAAOC,IAAY9I,EAAAA,EAAAA,UAAS,IAC5B+I,EAAgBC,IAAqBhJ,EAAAA,EAAAA,UAAS,IAC9CiJ,EAAYC,IAAiBlJ,EAAAA,EAAAA,WAAS,IAEtCmJ,EAASC,IAAcpJ,EAAAA,EAAAA,UAAS,IAChCqJ,EAAWC,IAAgBtJ,EAAAA,EAAAA,UAAS,KAE3CC,EAAAA,EAAAA,YAAU,MACJ8H,IAAgBQ,GAAqBN,GAAcJ,GAAWsB,EAGhErB,GAAU,GAFVyB,IAGF,GACC,CAACV,IAEJ,MACM5D,EAAUA,KACdO,EAAM,MACNgE,IAAc,EAoBVC,GAAeA,CAAClH,EAAIoF,KACxB,MAAM+B,EAAQjC,EAAQkC,WAAWC,GAASA,EAAKrH,KAAOA,IACtDkF,EAAQiC,GAAS,IACZjC,EAAQiC,MACR/B,GAELD,EAAW,IAAID,GAAS,EAapB+B,GAAeA,KACnB1B,GAAU,GACVQ,GAAY,GACZJ,GAAa,GACbE,GAAe,EAAM,EAGjBmB,GAAcM,IAAkB,IAADC,EAAAC,EAC9BxE,IAGL2C,GAAa,GACRK,IACHG,EAAiB,IACjBhB,EAAW,IACND,EAAQuC,KAAKrC,IACdA,EAAOjF,SAAW,GACXiF,QAIbpC,EAAG0E,KACDnE,KAAKoE,UAAU,CACbzC,QAASA,EAAQuC,KAAIvK,IAAA,IAAC,OAAEkI,EAAM,WAAEC,GAAYnI,EAAA,MAAM,CAAEmI,aAAYD,SAAQ,IACxEwC,kBAAmC,OAAhB3C,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB3I,UACrCuL,kBAAmC,OAAhB5C,QAAgB,IAAhBA,GAA+B,QAAfsC,EAAhBtC,EAAkBlI,qBAAa,IAAAwK,IAA/BA,EAAiCvK,eACpD8K,kBAAmC,OAAhB7C,QAAgB,IAAhBA,GAA+B,QAAfuC,EAAhBvC,EAAkBlI,qBAAa,IAAAyK,IAA/BA,EAAiCvK,mBAGpD+I,EACFvF,OAAOsH,WAAyB,OAAZT,QAAY,IAAZA,EAAAA,EAAgB7G,OAAOsH,WAE3CtH,OAAOuH,YAAW,IAAOvH,OAAOsH,WAAyB,OAAZT,QAAY,IAAZA,EAAAA,EAAgB7G,OAAOsH,YAAa,KACnF,EAkFF,OACE7J,EAAAA,EAAAA,MAAA+D,EAAAA,SAAA,CAAA5D,SAAA,EACEE,EAAAA,EAAAA,KAAC0J,EAAgB,CACf3F,MAAOsC,EACPjC,UAnFaW,IAAU,IAAD4E,EAC1B,IAAK5E,EAAKlH,OAER,YADA+L,QAAQC,IAAI,6CAGd,MAAM7I,EAAO+D,EAAK,GAAG/D,KACf8I,EAAa/E,EAAKgF,QAAO,CAACC,EAAKlB,KACnCkB,EAAIlB,EAAKhC,YAAcgC,EAChBkB,IACN,CAAC,GAEJ,OAAQhJ,GACN,IAAK,WACHwG,GAAY,GACZ,MACF,IAAK,UACHU,GAAkB,IAAI7E,MAAOC,WAC7BkE,GAAY,GACZ,MACF,IAAK,cACCL,IACFC,GAAa,GACbE,GAAe,IAEI,OAAhBZ,QAAgB,IAAhBA,GAA+B,QAAfiD,EAAhBjD,EAAkBlI,qBAAa,IAAAmL,GAA/BA,EAAiClL,eACpCmI,EAAW,IACND,EAAQuC,KAAKrC,IAAY,IAADoD,EAEzB,OADApD,EAAOjF,UAAwC,QAA7BqI,EAAAH,EAAWjD,EAAOC,mBAAW,IAAAmD,OAAA,EAA7BA,EAA+BC,OAAQ,GAClDrD,CAAM,MAInB,MACF,IAAK,WACCM,IACFC,GAAa,GACbE,GAAe,IAEjBV,EAAW,IACND,EAAQuC,KAAKrC,IAAY,IAADsD,EAEzB,OADAtD,EAAOjF,WAAyC,QAA7BuI,EAAAL,EAAWjD,EAAOC,mBAAW,IAAAqD,OAAA,EAA7BA,EAA+BD,OAAQ,GACnDrD,CAAM,MAGjB,MACF,IAAK,WACHO,GAAa,GACbE,GAAe,GACVD,GACHT,EAAW,IACND,EAAQuC,KAAKrC,IAAY,IAADuD,EAC2BC,EAE7CC,EAFa,OAAhB5D,QAAgB,IAAhBA,GAA+B,QAAf0D,EAAhB1D,EAAkBlI,qBAAa,IAAA4L,GAA/BA,EAAiC3L,cACnCoI,EAAOjF,WAAyC,QAA7ByI,EAAAP,EAAWjD,EAAOC,mBAAW,IAAAuD,OAAA,EAA7BA,EAA+BH,OAAQ,GAE1DrD,EAAOjF,UAAwC,QAA7B0I,EAAAR,EAAWjD,EAAOC,mBAAW,IAAAwD,OAAA,EAA7BA,EAA+BJ,OAAQ,GAE3D,OAAOrD,CAAM,MAInB,MAAM0D,EAAWxF,EAAKyF,OAAMvI,IAAA,IAAC,OAAEwI,GAAQxI,EAAA,OAAKwI,CAAM,IAClD/C,GAAqB6C,GACrB,MAAM1C,GAAmB,IAAIxE,MAAOC,UAAY2E,EAChDH,EAAoBD,GACpBD,EAAiB,IAAID,EAAeE,IACpCG,EAASD,EAAQ,GACjB,MACF,IAAK,QACHX,GAAa,GACbE,GAAe,GACfE,GAAY,GACZc,GAAW,GACXE,EAAazD,EAAK,GAAG2F,OACrB,MACF,QACEd,QAAQe,KAAK,QAADrE,OAAStF,EAAI,qBAC7B,EAQIiD,UA7JYA,CAACuB,EAAQoF,KACzBlG,EAAMc,EAAO,EA6JTnB,SAnKYiB,GAAWX,EAAYW,GAoKnCnB,QAASA,EACTD,QAASC,KAEXnE,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CACf9L,OAAQ2H,EACR9H,SAAWW,GAAcH,EAAoBG,GAC7CV,YAAU,KAGZmB,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAAAT,SACF6G,EAAQuC,KAAI,CAAA3G,EAA6BqG,KAAK,IAAjC,OAAE/B,EAAM,WAAEC,EAAU,GAAErF,GAAIc,EAAA,OACtCvC,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACsC,GAAuB,IAAnB6D,EAAQ9I,OAAe,GAAK,EAAGgC,UAAU,OAAMC,UACvDH,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAE,SAAA,EACJH,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAAAZ,SAAA,EACVE,EAAAA,EAAAA,KAACW,EAAAA,EAAe,CAAAb,SAAC,eACjBE,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CACTiF,SAAUoB,GAAaE,GAAeI,EACtC1G,YAAY,aACZC,KAAK,OACLC,MAAO6F,EACPlI,SAAWsC,GAAMyH,GAAalH,EAAI,CAAEqF,WAAY5F,EAAEE,OAAOH,UAE1D2H,EAAQ,IACP5I,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNC,MAAM,SACN6F,SAAU0B,EACVrH,QAASA,IAtLLqB,KACpB,MAAMmH,EAAQjC,EAAQkC,WAAWC,GAASA,EAAKrH,KAAOA,IACtDkF,EAAQmE,OAAOlC,EAAO,GACtBhC,EAAW,IAAID,GAAS,EAmLOoE,CAAatJ,GAAI3B,UAEhCE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,gBAIdE,EAAAA,EAAAA,KAACgL,EAAAA,EAAa,CACZjK,YAAY,iEACZgF,SAAUoB,GAAaM,EACvBxG,MAAO4F,EACPoE,UAAW5C,IAAYxB,EACvBjI,SAAWsC,GAAMyH,GAAalH,EAAI,CAAEoF,OAAQ3F,EAAEE,OAAOH,QACrDQ,GAAG,8BACHyJ,KAAM,SAEF,gBAAA5E,OA9BqE7E,GA+BxE,QAGR4G,IACDrI,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gCAA+BC,SAC3CuI,IAAYE,GAAa,qDAG7BZ,EAAc9J,QACbmC,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACC,QAAQ,8BAA8BvL,UAAU,OAAMC,UAChEE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,8BAGV,IAEFE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAOe,MAAO,CAAEyK,SAAU,OAAQC,WAAY,UAAWxL,SACrE6H,EAAc9J,OACX8J,EAAcuB,KAAI,CAACqC,EAAMC,KACvB7L,EAAAA,EAAAA,MAAC8L,EAAAA,EAAM,CAA4BvL,MAAM,OAAOwL,MAAM,eAAe7L,UAAU,OAAMC,SAAA,EACjFyL,EAAO,KAAM5H,QAAQ,GAAG,OAC5B,SAAA2C,OAFsBkF,EAAC,KAAAlF,OAAIiF,MAI7B,MAGN5L,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEH,EAAAA,EAAAA,MAACM,EAAAA,EAAO,CACNC,MAAM,UACN6F,SAAUoB,GAAaE,GAAeI,EACtCrH,QAASA,KA7NfwG,EAAW,IACND,EACH,CACEG,YAAYtC,EAAAA,EAAAA,KACZqC,OAAQ,GACRpF,IAAI+C,EAAAA,EAAAA,OAwNyB,EAAA1E,SAAA,CAE1B,IAAI,IACH,QAEJE,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNJ,UAAU,OACVK,MAAM,UACN6F,SACe,cAAblC,GACAsD,GACAE,IACCV,EAAQ6D,OAAMmB,IAAA,IAAC,OAAE9E,GAAQ8E,EAAA,QAAO9E,CAAM,IAEzCzG,QAASA,IAAMqI,GAAWN,GAAcxB,EAAQ9I,OAAS,GAAGiC,SAE3DiH,IAAWI,GAAaE,GAAeE,GACpC,cACAA,EACE,cACAJ,EACE,aACAE,EACE,eACAI,EACE,WACA,gBAEbA,IAAqBN,IAAcE,GAAe,OAClDI,IAAqBN,IAAcE,IAClCrH,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAM,YAAY6F,SAAUoB,GAAaE,EAAajH,QA1OnDwL,KAClB5E,GAAU,GACVJ,EAAWD,EAAQuC,KAAKrC,IAAM,IAAWA,EAAQC,YAAYtC,EAAAA,EAAAA,KAAU5C,SAAU,QACjFgG,EAAiB,IACjBU,EAAW,GACXE,EAAa,IACbpB,GAAa,GACbI,GAAY,GACZE,GAAoB,EAAM,EAkOgE5H,SAAC,UAItFqH,GAAaE,GACZ1H,EAAAA,EAAAA,MAACwL,EAAAA,EAAU,CAAArL,SAAA,EACTE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,+BACRE,EAAAA,EAAAA,KAAC6L,EAAAA,EAAK,IAAG,cAEThE,GACFlI,EAAAA,EAAAA,MAACwL,EAAAA,EAAU,CAAArL,SAAA,EACTE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,4BACP6H,EAAcoC,QAAO,CAAC+B,EAAOP,IAASO,EAAQP,GAAM,GAAK,IAAK,cAGjE,IAEFvL,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNC,MAAM,YACNL,UAAU,iBACVkG,UAAWkB,EACX7G,QAASA,IAAM4G,GAAU,GAAMlH,SAChC,UAGDE,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACNC,MAAM,YACNL,UAAU,YACVkG,UAAWoB,IAAcE,EACzBjH,QAASsI,GAAa5I,SACvB,UAES,cAGE,cAAb+D,IACC7D,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mCAAkCC,SAAC,gCAGpDE,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CACTV,MAAO,CAAEW,OAAQ,WACjBC,QAAS2G,GAAcxB,EAAQ9I,OAAS,EACxCkI,SAAUY,EAAQ9I,OAAS,EAC3Be,SAAWsC,GAAMkH,EAAclH,EAAEE,OAAOI,SACxC3B,UAAU,OACVmB,KAAK,WACLS,GAAG,gBACHC,OACE1B,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAEW,OAAQ,WAAYzB,SAAC,oDAGxCE,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CACTV,MAAO,CAAEW,OAAQ,WACjBC,QAASyF,EACTlB,SAAUoB,GAAaE,EACvBzI,SAAWsC,GAAMgG,EAAgBhG,EAAEE,OAAOI,SAC1C3B,UAAU,OACVmB,KAAK,WACLS,GAAG,oBACHC,OACE1B,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAEW,OAAQ,WAAYzB,SAAC,qEAMxCE,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAAAT,SACF6G,EAAQuC,KAAI6C,IAAA,IAAC,GAAEtK,EAAE,WAAEqF,EAAU,SAAElF,GAAUmK,EAAA,OACxC/L,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACsC,GAAuB,IAAnB6D,EAAQ9I,OAAe,GAAK,EAAGgC,UAAU,OAAMC,SACtD8B,IAAY5B,EAAAA,EAAAA,KAACgM,EAAAA,EAAc,CAACrK,UAAWmF,EAAYlF,SAAUA,GAAY,MAAM,YAAA0E,OADP7E,GAEpE,QAGV,C","sources":["components/GenerationConfig.js","components/PromptResponse.js","components/Timer.js","components/WebsocketManager.js","views/websocket/WebsocketView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n} from '@coreui/react'\r\n\r\nexport const defaultGenerationConfig = (overrides = {}) => {\r\n  return {\r\n    llmConfig: {\r\n      num_beams: 1,\r\n      do_sample: true,\r\n      temperature: 1,\r\n      top_p: 1,\r\n      top_k: 50,\r\n      max_new_tokens: 100,\r\n      repetition_penalty: 1,\r\n      length_penalty: 1,\r\n      ...(overrides.llmConfig || {}),\r\n    },\r\n    requestConfig: {\r\n      onlyNewTokens: true,\r\n      streamResponse: true,\r\n      ...(overrides.requestConfig || {}),\r\n    },\r\n  }\r\n}\r\n\r\nconst GenerationConfig = ({\r\n  onChange = () => undefined,\r\n  showStream = false,\r\n  defaultConfig = {},\r\n  config = {},\r\n}) => {\r\n  const [stateConfig, setStateConfig] = useState(defaultGenerationConfig(defaultConfig))\r\n\r\n  useEffect(() => {\r\n    setGenerationConfig({})\r\n  }, [])\r\n\r\n  const getLlmConfig = () => ({\r\n    ...stateConfig.llmConfig,\r\n    ...(config?.llmConfig || {}),\r\n  })\r\n  const getRequestConfig = () => ({\r\n    ...stateConfig.requestConfig,\r\n    ...(config?.requestConfig || {}),\r\n  })\r\n\r\n  const setGenerationConfig = (newConfig) => {\r\n    const updatedConfig = {\r\n      llmConfig: {\r\n        ...stateConfig.llmConfig,\r\n        ...newConfig.llmConfig,\r\n      },\r\n      requestConfig: {\r\n        ...stateConfig.requestConfig,\r\n        ...newConfig.requestConfig,\r\n      },\r\n    }\r\n    setStateConfig(updatedConfig)\r\n    onChange(updatedConfig)\r\n  }\r\n\r\n  const setLlmConfig = (llmConfig) => {\r\n    setGenerationConfig({ llmConfig })\r\n  }\r\n\r\n  const setRequestConfig = (requestConfig) => {\r\n    setGenerationConfig({ requestConfig })\r\n  }\r\n\r\n  return (\r\n    <CCard className=\"mb-3 \">\r\n      <CCardHeader>\r\n        Generation Config:\r\n        <CButton\r\n          color=\"secondary\"\r\n          size=\"sm\"\r\n          className=\"float-end\"\r\n          onClick={() => {\r\n            const defaults = defaultGenerationConfig(defaultConfig)\r\n            setStateConfig(defaults)\r\n            onChange(defaults)\r\n          }}\r\n        >\r\n          reset defaults\r\n        </CButton>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <small>\r\n          <br />\r\n        </small>\r\n        <CRow>\r\n          <CCol cm={6}>\r\n            <CInputGroup className=\"mb-3\">\r\n              <CInputGroupText style={{ width: 205 }}>\r\n                Temperature - <strong>&nbsp;Float</strong>\r\n              </CInputGroupText>\r\n              <CFormInput\r\n                placeholder=\"temperature\"\r\n                type=\"number\"\r\n                value={getLlmConfig().temperature}\r\n                onChange={(e) => {\r\n                  const value = parseFloat(e.target.value) || 0\r\n                  setLlmConfig({ temperature: value < 0 ? 0 : value })\r\n                }}\r\n              />\r\n            </CInputGroup>\r\n          </CCol>\r\n          <CCol cm={6}>\r\n            <CInputGroup className=\"mb-3\">\r\n              <CInputGroupText style={{ width: 205 }}>\r\n                Max new Tokens - <strong>&nbsp;Int</strong>\r\n              </CInputGroupText>\r\n              <CFormInput\r\n                placeholder=\"max_new_tokens\"\r\n                type=\"number\"\r\n                value={getLlmConfig().max_new_tokens}\r\n                onChange={(e) => {\r\n                  const value = parseInt(e.target.value) || 0\r\n                  setLlmConfig({ max_new_tokens: value < 1 ? 1 : value })\r\n                }}\r\n              />\r\n            </CInputGroup>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <CCol cm={6}>\r\n            <CInputGroup className=\"mb-3\">\r\n              <CInputGroupText style={{ width: 205 }}>\r\n                Number of Beams - <strong>&nbsp;Int</strong>\r\n              </CInputGroupText>\r\n              <CFormInput\r\n                placeholder=\"num_beams\"\r\n                type=\"number\"\r\n                value={getLlmConfig().num_beams}\r\n                onChange={(e) => {\r\n                  const value = parseInt(e.target.value) || 0\r\n                  setLlmConfig({ num_beams: value < 1 ? 1 : value })\r\n                }}\r\n              />\r\n            </CInputGroup>\r\n          </CCol>\r\n          <CCol cm={6}>\r\n            <CInputGroup className=\"mb-3\">\r\n              <CFormCheck\r\n                style={{ cursor: 'pointer' }}\r\n                checked={getLlmConfig().do_sample}\r\n                onChange={(e) => setLlmConfig({ do_sample: !!e.target.checked })}\r\n                className=\"mt-2\"\r\n                type=\"checkbox\"\r\n                id=\"doSample\"\r\n                label={<span style={{ cursor: 'pointer' }}>Do sample ( Bool )</span>}\r\n              />\r\n            </CInputGroup>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <CCol cm={6}>\r\n            <CInputGroup className=\"mb-3\">\r\n              <CInputGroupText style={{ width: 205 }}>\r\n                Top 'P' - <strong>&nbsp;Float</strong>\r\n              </CInputGroupText>\r\n              <CFormInput\r\n                placeholder=\"top_p\"\r\n                type=\"number\"\r\n                value={getLlmConfig().top_p}\r\n                onChange={(e) => {\r\n                  const value = parseFloat(e.target.value) || 0\r\n                  setLlmConfig({ top_p: value < 0 ? 0 : value })\r\n                }}\r\n              />\r\n            </CInputGroup>\r\n          </CCol>\r\n          <CCol cm={6}>\r\n            <CInputGroup className=\"mb-3\">\r\n              <CInputGroupText style={{ width: 205 }}>\r\n                Top 'K' - <strong>&nbsp;Int</strong>\r\n              </CInputGroupText>\r\n              <CFormInput\r\n                placeholder=\"top_k\"\r\n                type=\"number\"\r\n                value={getLlmConfig().top_k}\r\n                onChange={(e) => {\r\n                  const value = parseInt(e.target.value) || 0\r\n                  setLlmConfig({ top_k: value < 0 ? 0 : value })\r\n                }}\r\n              />\r\n            </CInputGroup>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <CCol cm={6}>\r\n            <CInputGroup className=\"mb-3\">\r\n              <CInputGroupText style={{ width: 205 }}>\r\n                Repetition penalty - <strong>&nbsp;Float</strong>\r\n              </CInputGroupText>\r\n              <CFormInput\r\n                placeholder=\"repetition_penalty\"\r\n                type=\"number\"\r\n                value={getLlmConfig().repetition_penalty}\r\n                onChange={(e) => {\r\n                  const value = parseFloat(e.target.value) || 0\r\n                  setLlmConfig({ repetition_penalty: value < 0.000001 ? 0.000001 : value })\r\n                }}\r\n              />\r\n            </CInputGroup>\r\n          </CCol>\r\n          <CCol cm={6}>\r\n            <CInputGroup className=\"mb-3\">\r\n              <CInputGroupText style={{ width: 205 }}>\r\n                Length penalty - <strong>&nbsp;Float</strong>\r\n              </CInputGroupText>\r\n              <CFormInput\r\n                placeholder=\"length_penalty\"\r\n                type=\"number\"\r\n                value={getLlmConfig().length_penalty}\r\n                onChange={(e) => {\r\n                  const value = parseFloat(e.target.value) || 0\r\n                  setLlmConfig({ length_penalty: value < 0 ? 0 : value })\r\n                }}\r\n              />\r\n            </CInputGroup>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <CCol cm={6}>\r\n            <CFormCheck\r\n              style={{ cursor: 'pointer' }}\r\n              checked={getRequestConfig().onlyNewTokens}\r\n              onChange={(e) => setRequestConfig({ onlyNewTokens: e.target.checked })}\r\n              className=\"mt-2\"\r\n              type=\"checkbox\"\r\n              id=\"onlyNewTokensCheck\"\r\n              label={\r\n                <span style={{ cursor: 'pointer' }}>\r\n                  Only return new tokens ( or include prompt )\r\n                </span>\r\n              }\r\n            />\r\n          </CCol>\r\n          <CCol cm={6}>\r\n            {showStream && (\r\n              <CFormCheck\r\n                style={{ cursor: 'pointer' }}\r\n                checked={getRequestConfig().streamResponse}\r\n                onChange={(e) => setRequestConfig({ streamResponse: e.target.checked })}\r\n                className=\"mt-2\"\r\n                type=\"checkbox\"\r\n                id=\"isStreamResponse\"\r\n                label={\r\n                  <span style={{ cursor: 'pointer' }}>\r\n                    Stream tokens as they are being generated ( or all at once )\r\n                  </span>\r\n                }\r\n              />\r\n            )}\r\n          </CCol>\r\n        </CRow>\r\n\r\n        <div className=\"invalid-feedback d-block\">\r\n          {getLlmConfig().num_beams !== 1 && 'Multiple beams do not support streaming!'}\r\n        </div>\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default GenerationConfig\r\n","import React, { useState } from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter'\r\nimport atomDark from 'react-syntax-highlighter/dist/cjs/styles/hljs/atom-one-dark'\r\nimport docco from 'react-syntax-highlighter/dist/cjs/styles/hljs/docco'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PromptResponse = ({ requestId, response }) => {\r\n  const [rawResponse, setRawResponse] = useState(false)\r\n  const theme = useSelector(({ theme }) => {\r\n    return theme === 'auto'\r\n      ? window.matchMedia('(prefers-color-scheme: dark)').matches\r\n        ? 'dark'\r\n        : 'light'\r\n      : theme\r\n  })\r\n  const components = {\r\n    // Custom component for text\r\n    code: ({ node, ...props }) => {\r\n      return (\r\n        <span>\r\n          <SyntaxHighlighter language={props.language} style={theme === 'dark' ? atomDark : docco}>\r\n            {props.children}\r\n          </SyntaxHighlighter>\r\n        </span>\r\n      )\r\n    },\r\n  }\r\n  return (\r\n    <CCard className=\"mb-5 \">\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm={8}>\r\n            <div>Response to requestID:</div>\r\n            <small>{requestId}</small>\r\n          </CCol>\r\n          <CCol sm={4}>\r\n            <CButton\r\n              size=\"sm\"\r\n              color={rawResponse ? 'info' : 'light'}\r\n              className=\"float-end mt-2\"\r\n              onClick={() => setRawResponse(!rawResponse)}\r\n            >\r\n              {rawResponse ? 'View markdown' : 'View raw response'}\r\n            </CButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        {rawResponse ? (\r\n          <span className=\"markdown-llm\">{response}</span>\r\n        ) : (\r\n          <ReactMarkdown components={components} skipHtml className=\"markdown-llm\">\r\n            {response.replace(/ /g, '\\u00a0')}\r\n          </ReactMarkdown>\r\n        )}\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default PromptResponse\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nfunction Timer() {\r\n  const [seconds, setSeconds] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const timeStart = new Date().getTime()\r\n    const interval = setInterval(() => {\r\n      setSeconds((seconds) => new Date().getTime() - timeStart)\r\n    }, 99)\r\n\r\n    // Clear interval on component unmount\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <>{(seconds / 1000).toFixed(3)}</>\r\n}\r\n\r\nexport default Timer\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CButton, CCard, CCardHeader } from '@coreui/react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst getWsColor = (wsStatus) => {\r\n  switch (wsStatus) {\r\n    case 'connecting':\r\n      return 'yellow'\r\n    case 'connected':\r\n      return 'green'\r\n    case 'closed':\r\n      return 'gray'\r\n    case 'error':\r\n      return 'red'\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\nconst wsCallbackHash = {}\r\n\r\nconst WebsocketManager = ({\r\n  wsUrl,\r\n  onConnecting = () => undefined,\r\n  onConnect = () => undefined,\r\n  onError = () => undefined,\r\n  onClose = () => undefined,\r\n  onMessage = () => undefined,\r\n  onStatus = () => undefined,\r\n}) => {\r\n  const [connectionId, setConnectionId] = useState(uuidv4())\r\n  const [ws, setWs] = useState(null)\r\n  const [wsStatus, setWsStatus] = useState('connecting')\r\n\r\n  // Required workarround so react won't lose the parent state on callbacks\r\n  wsCallbackHash[connectionId] = {\r\n    onConnecting,\r\n    onConnect,\r\n    onError,\r\n    onClose,\r\n    onMessage,\r\n    onStatus,\r\n  }\r\n\r\n  const onWsMessage = (event) => {\r\n    let data = event.data\r\n    try {\r\n      data = JSON.parse(event.data)\r\n    } catch (e) {}\r\n    wsCallbackHash[connectionId]?.onMessage(data, event)\r\n  }\r\n\r\n  const closeSocket = (ws) => {\r\n    if (ws) {\r\n      ws.removeEventListener('message', onWsMessage)\r\n      ws.close()\r\n      setWs(null)\r\n    }\r\n  }\r\n\r\n  const setStatus = (status) => {\r\n    setWsStatus(status)\r\n    onStatus(status)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket(wsUrl)\r\n    setStatus('connecting')\r\n    socket.status = 'connecting'\r\n    setWs(socket)\r\n    wsCallbackHash[connectionId]?.onConnecting(socket, connectionId)\r\n\r\n    socket.addEventListener('open', function (event) {\r\n      setStatus('connected')\r\n      socket.status = 'connected'\r\n      wsCallbackHash[connectionId]?.onConnect(socket, connectionId)\r\n    })\r\n\r\n    socket.addEventListener('close', function (event) {\r\n      socket.status !== 'connecting' && socket.status !== 'closing' && setStatus('closed')\r\n      socket.status = 'closed'\r\n      wsCallbackHash[connectionId]?.onClose(socket, connectionId)\r\n    })\r\n\r\n    socket.addEventListener('error', function (event) {\r\n      socket.status = 'error'\r\n      setStatus('error')\r\n      wsCallbackHash[connectionId]?.onError(socket, connectionId)\r\n    })\r\n\r\n    socket.addEventListener('message', onWsMessage)\r\n    return () => {\r\n      delete wsCallbackHash[connectionId]\r\n      closeSocket(ws)\r\n    }\r\n  }, [connectionId])\r\n\r\n  return (\r\n    <CCard className=\"mb-3 \">\r\n      <CCardHeader style={{ lineHeight: '2rem' }}>\r\n        Websocket Status :&nbsp;\r\n        <strong\r\n          style={{\r\n            color: getWsColor(wsStatus),\r\n          }}\r\n        >\r\n          {wsStatus}\r\n        </strong>\r\n        {wsStatus === 'connected' && (\r\n          <CButton\r\n            size=\"sm\"\r\n            color=\"danger\"\r\n            className=\"float-end ms-3\"\r\n            onClick={() => closeSocket(ws)}\r\n          >\r\n            Close\r\n          </CButton>\r\n        )}\r\n        {(wsStatus === 'error' || wsStatus === 'connected') && (\r\n          <CButton\r\n            size=\"sm\"\r\n            color=\"secondary\"\r\n            className=\"float-end ms-3\"\r\n            onClick={() => {\r\n              ws.status = 'closing'\r\n              setConnectionId(uuidv4())\r\n            }}\r\n          >\r\n            Reconnect\r\n          </CButton>\r\n        )}\r\n        {(wsStatus === 'closed' || wsStatus === 'connecting') && (\r\n          <CButton\r\n            size=\"sm\"\r\n            disabled={wsStatus === 'connecting'}\r\n            color=\"success\"\r\n            className=\"float-end ms-3\"\r\n            onClick={() => setConnectionId(uuidv4())}\r\n          >\r\n            {wsStatus === 'closed' ? 'Connect' : 'Connecting...'}\r\n          </CButton>\r\n        )}\r\n      </CCardHeader>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default WebsocketManager\r\n","import React, { useEffect, useState } from 'react'\nimport GenerationConfig from '../../components/GenerationConfig'\nimport WebsocketManager from '../../components/WebsocketManager'\nimport { v4 as uuidv4 } from 'uuid'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCol,\n  CFormCheck,\n  CFormInput,\n  CFormLabel,\n  CFormTextarea,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport PromptResponse from '../../components/PromptResponse'\nimport Timer from '../../components/Timer'\n\nconst hostname = window.location.href.split('/')[0] + '//' + window.location.host\nconst API_PATH = `${process.env.REACT_APP_BASE_URL || hostname}/api/ws`.replace(/^http/i, 'ws')\n\nconst WebsocketView = () => {\n  const [generationConfig, setGenerationConfig] = useState({})\n  const [ws, setWs] = useState(null)\n  const [wsStatus, setWsStatus] = useState('connecting')\n\n  const [prompts, setPrompts] = useState([\n    {\n      prompt: '[INST] Generate a very long poem about 1000 cats [/INST]\\n\\n',\n      request_id: uuidv4(),\n      response: '',\n      id: uuidv4(),\n    },\n  ])\n\n  const [isStop, setIsStop] = useState(false)\n  const [autoContinue, setAutoContinue] = useState(false)\n  const [isWaiting, setIsWaiting] = useState(false)\n  const [isStreaming, setIsStreaming] = useState(false)\n  const [isQueued, setIsQueued] = useState(false)\n\n  const [isContinuePrompt, setIsContinuePrompt] = useState(false)\n  const [responseTimes, setResponseTimes] = useState([])\n  const [lastResponseTime, setLastResponseTime] = useState(0)\n  const [nonce, setNonce] = useState(0)\n  const [executionStart, setExecutionStart] = useState(0)\n  const [autoScroll, setAutoScroll] = useState(true)\n\n  const [isError, setIsError] = useState(0)\n  const [errorText, setErrorText] = useState('')\n\n  useEffect(() => {\n    if (autoContinue && isContinuePrompt && !isWaiting && !isStop && !isError) {\n      sendPrompt() // need to allow the states to update before continuing\n    } else {\n      setIsStop(false)\n    }\n  }, [nonce])\n\n  const onStatus = (status) => setWsStatus(status)\n  const onClose = () => {\n    setWs(null)\n    abortRequest()\n  }\n  const onConnect = (socket, connetionId) => {\n    setWs(socket)\n  }\n  const removePrompt = (id) => {\n    const index = prompts.findIndex((item) => item.id === id)\n    prompts.splice(index, 1)\n    setPrompts([...prompts])\n  }\n  const addPrompt = () => {\n    setPrompts([\n      ...prompts,\n      {\n        request_id: uuidv4(),\n        prompt: '',\n        id: uuidv4(),\n      },\n    ])\n  }\n  const updatePrompt = (id, prompt) => {\n    const index = prompts.findIndex((item) => item.id === id)\n    prompts[index] = {\n      ...prompts[index],\n      ...prompt,\n    }\n    setPrompts([...prompts])\n  }\n  const resetPrompt = () => {\n    setIsStop(false)\n    setPrompts(prompts.map((prompt) => ({ ...prompt, request_id: uuidv4(), response: '' })))\n    setResponseTimes([])\n    setIsError(0)\n    setErrorText('')\n    setIsWaiting(false)\n    setIsQueued(false)\n    setIsContinuePrompt(false)\n  }\n\n  const abortRequest = () => {\n    setIsStop(true)\n    setIsQueued(false)\n    setIsWaiting(false)\n    setIsStreaming(false)\n  }\n\n  const sendPrompt = (scrollToText) => {\n    if (!ws) {\n      return\n    }\n    setIsWaiting(true)\n    if (!isContinuePrompt) {\n      setResponseTimes([])\n      setPrompts([\n        ...prompts.map((prompt) => {\n          prompt.response = ''\n          return prompt\n        }),\n      ])\n    }\n    ws.send(\n      JSON.stringify({\n        prompts: prompts.map(({ prompt, request_id }) => ({ request_id, prompt })),\n        generation_config: generationConfig?.llmConfig,\n        only_new_tokens: !!generationConfig?.requestConfig?.onlyNewTokens,\n        stream_response: !!generationConfig?.requestConfig?.streamResponse,\n      }),\n    )\n    if (isContinuePrompt) {\n      window.scrollLock = scrollToText ?? window.scrollLock\n    } else {\n      window.setTimeout(() => (window.scrollLock = scrollToText ?? window.scrollLock), 250)\n    }\n  }\n\n  const onMessage = (data) => {\n    if (!data.length) {\n      console.log('Got empty events array, this is normal...')\n      return\n    }\n    const type = data[0].type\n    const eventsHash = data.reduce((res, item) => {\n      res[item.request_id] = item\n      return res\n    }, {})\n\n    switch (type) {\n      case 'ACCEPTED':\n        setIsQueued(true)\n        break\n      case 'STARTED':\n        setExecutionStart(new Date().getTime())\n        setIsQueued(false)\n        break\n      case 'INITIALIZED':\n        if (isWaiting) {\n          setIsWaiting(false)\n          setIsStreaming(true)\n        }\n        if (!generationConfig?.requestConfig?.onlyNewTokens) {\n          setPrompts([\n            ...prompts.map((prompt) => {\n              prompt.response = eventsHash[prompt.request_id]?.text || ''\n              return prompt\n            }),\n          ])\n        }\n        break\n      case 'PROGRESS':\n        if (isWaiting) {\n          setIsWaiting(false)\n          setIsStreaming(true)\n        }\n        setPrompts([\n          ...prompts.map((prompt) => {\n            prompt.response += eventsHash[prompt.request_id]?.text || ''\n            return prompt\n          }),\n        ])\n        break\n      case 'COMPLETE':\n        setIsWaiting(false)\n        setIsStreaming(false)\n        if (!isStreaming) {\n          setPrompts([\n            ...prompts.map((prompt) => {\n              if (generationConfig?.requestConfig?.onlyNewTokens) {\n                prompt.response += eventsHash[prompt.request_id]?.text || ''\n              } else {\n                prompt.response = eventsHash[prompt.request_id]?.text || ''\n              }\n              return prompt\n            }),\n          ])\n        }\n        const isAllEos = data.every(({ is_eos }) => is_eos)\n        setIsContinuePrompt(!isAllEos)\n        const lastResponseTime = new Date().getTime() - executionStart\n        setLastResponseTime(lastResponseTime)\n        setResponseTimes([...responseTimes, lastResponseTime])\n        setNonce(nonce + 1)\n        break\n      case 'ERROR':\n        setIsWaiting(false)\n        setIsStreaming(false)\n        setIsQueued(false)\n        setIsError(true)\n        setErrorText(data[0].error)\n        break\n      default:\n        console.warn(`Type ${type} is not handled!`)\n    }\n  }\n\n  return (\n    <>\n      <WebsocketManager\n        wsUrl={API_PATH}\n        onMessage={onMessage}\n        onConnect={onConnect}\n        onStatus={onStatus}\n        onClose={onClose}\n        onError={onClose}\n      />\n      <GenerationConfig\n        config={generationConfig}\n        onChange={(newConfig) => setGenerationConfig(newConfig)}\n        showStream\n      />\n\n      <CRow>\n        {prompts.map(({ prompt, request_id, id }, index) => (\n          <CCol sm={prompts.length === 1 ? 12 : 6} className=\"mt-4\" key={`batch-prompt-${id}`}>\n            <CCard>\n              <CInputGroup>\n                <CInputGroupText>RequestId</CInputGroupText>\n                <CFormInput\n                  disabled={isWaiting || isStreaming || isContinuePrompt}\n                  placeholder=\"request_id\"\n                  type=\"text\"\n                  value={request_id}\n                  onChange={(e) => updatePrompt(id, { request_id: e.target.value })}\n                />\n                {index > 0 && (\n                  <CButton\n                    color=\"danger\"\n                    disabled={isContinuePrompt}\n                    onClick={() => removePrompt(id)}\n                  >\n                    <strong>Clear</strong>\n                  </CButton>\n                )}\n              </CInputGroup>\n              <CFormTextarea\n                placeholder=\"[INST] Generate a very long poem about 1000 cats [/INST]\\n\\n\"\n                disabled={isWaiting || isContinuePrompt}\n                value={prompt}\n                invalid={!!isError || !prompt}\n                onChange={(e) => updatePrompt(id, { prompt: e.target.value })}\n                id=\"exampleFormControlTextarea1\"\n                rows={10}\n              ></CFormTextarea>\n            </CCard>\n          </CCol>\n        ))}\n      </CRow>\n      {!!isError && (\n        <div className=\"invalid-feedback d-block mt-2\">\n          {isError && (errorText || 'Error generating a response, check your console')}\n        </div>\n      )}\n      {responseTimes.length ? (\n        <CFormLabel htmlFor=\"exampleFormControlTextarea1\" className=\"mt-3\">\n          <strong>Response time history: </strong>\n        </CFormLabel>\n      ) : (\n        ''\n      )}\n      <div className=\"pb-3\" style={{ overflow: 'auto', whiteSpace: 'nowrap' }}>\n        {responseTimes.length\n          ? responseTimes.map((time, i) => (\n              <CBadge key={`badge-${i}-${time}`} color=\"dark\" shape=\"rounded-pill\" className=\"me-2\">\n                {(time / 1000).toFixed(3)} s\n              </CBadge>\n            ))\n          : ''}\n      </div>\n\n      <div>\n        <CButton\n          color=\"primary\"\n          disabled={isWaiting || isStreaming || isContinuePrompt}\n          onClick={() => addPrompt()}\n        >\n          {' '}\n          +{' '}\n        </CButton>\n        <CButton\n          className=\"ms-3\"\n          color=\"primary\"\n          disabled={\n            wsStatus !== 'connected' ||\n            isWaiting ||\n            isStreaming ||\n            !prompts.every(({ prompt }) => !!prompt)\n          }\n          onClick={() => sendPrompt(autoScroll && prompts.length < 3)}\n        >\n          {isStop && (isWaiting || isStreaming || isQueued)\n            ? 'Stopping...'\n            : isQueued\n              ? 'In Queue...'\n              : isWaiting\n                ? 'Waiting...'\n                : isStreaming\n                  ? 'Streaming...'\n                  : isContinuePrompt\n                    ? 'Continue'\n                    : 'Send Prompt'}\n        </CButton>\n        {isContinuePrompt && !isWaiting && !isStreaming && ' or '}\n        {isContinuePrompt && !isWaiting && !isStreaming && (\n          <CButton color=\"secondary\" disabled={isWaiting || isStreaming} onClick={resetPrompt}>\n            reset\n          </CButton>\n        )}\n        {isWaiting || isStreaming ? (\n          <CFormLabel>\n            <strong>&nbsp;&nbsp;Segment time:&nbsp;</strong>\n            <Timer /> seconds\n          </CFormLabel>\n        ) : lastResponseTime ? (\n          <CFormLabel>\n            <strong>&nbsp;&nbsp;Generation:&nbsp;</strong>\n            {responseTimes.reduce((total, time) => total + time, 0) / 1000} seconds\n          </CFormLabel>\n        ) : (\n          ''\n        )}\n        <CButton\n          color=\"secondary\"\n          className=\"float-end ms-3\"\n          disabled={!autoContinue}\n          onClick={() => setIsStop(true)}\n        >\n          Stop\n        </CButton>\n        <CButton\n          color=\"secondary\"\n          className=\"float-end\"\n          disabled={!isWaiting && !isStreaming}\n          onClick={abortRequest}\n        >\n          Abort\n        </CButton>\n        &nbsp;&nbsp;\n      </div>\n      {wsStatus !== 'connected' && (\n        <div className=\"valid-feedback d-block mt-1 mb-3\">Websocket is not connected</div>\n      )}\n\n      <CFormCheck\n        style={{ cursor: 'pointer' }}\n        checked={autoScroll && prompts.length < 3}\n        disabled={prompts.length > 2}\n        onChange={(e) => setAutoScroll(e.target.checked)}\n        className=\"mt-2\"\n        type=\"checkbox\"\n        id=\"setAutoScroll\"\n        label={\n          <span style={{ cursor: 'pointer' }}>Auto scroll to follow the generated response</span>\n        }\n      />\n      <CFormCheck\n        style={{ cursor: 'pointer' }}\n        checked={autoContinue}\n        disabled={isWaiting || isStreaming}\n        onChange={(e) => setAutoContinue(e.target.checked)}\n        className=\"mt-2\"\n        type=\"checkbox\"\n        id=\"autoContinueCheck\"\n        label={\n          <span style={{ cursor: 'pointer' }}>\n            Automatically continue prompt generation when didnt reach EOS\n          </span>\n        }\n      />\n\n      <CRow>\n        {prompts.map(({ id, request_id, response }) => (\n          <CCol sm={prompts.length === 1 ? 12 : 6} className=\"mt-4\" key={`response-${id}`}>\n            {response && <PromptResponse requestId={request_id} response={response || ''} />}\n          </CCol>\n        ))}\n      </CRow>\n    </>\n  )\n}\n\nexport default WebsocketView\n"],"names":["defaultGenerationConfig","overrides","arguments","length","undefined","llmConfig","num_beams","do_sample","temperature","top_p","top_k","max_new_tokens","repetition_penalty","length_penalty","requestConfig","onlyNewTokens","streamResponse","_ref","onChange","showStream","defaultConfig","config","stateConfig","setStateConfig","useState","useEffect","setGenerationConfig","getLlmConfig","getRequestConfig","newConfig","updatedConfig","setLlmConfig","setRequestConfig","_jsxs","CCard","className","children","CCardHeader","_jsx","CButton","color","size","onClick","defaults","CCardBody","CRow","CCol","cm","CInputGroup","CInputGroupText","style","width","CFormInput","placeholder","type","value","e","parseFloat","target","parseInt","CFormCheck","cursor","checked","id","label","requestId","response","rawResponse","setRawResponse","theme","useSelector","_ref2","window","matchMedia","matches","components","code","_ref3","node","props","SyntaxHighlighter","language","atomDark","docco","sm","ReactMarkdown","skipHtml","replace","seconds","setSeconds","timeStart","Date","getTime","interval","setInterval","clearInterval","_Fragment","toFixed","getWsColor","wsStatus","wsCallbackHash","wsUrl","onConnecting","onConnect","onError","onClose","onMessage","onStatus","connectionId","setConnectionId","uuidv4","ws","setWs","setWsStatus","onWsMessage","event","_wsCallbackHash$conne","data","JSON","parse","closeSocket","removeEventListener","close","setStatus","status","_wsCallbackHash$conne2","socket","WebSocket","addEventListener","_wsCallbackHash$conne3","_wsCallbackHash$conne4","_wsCallbackHash$conne5","lineHeight","disabled","hostname","location","href","split","host","API_PATH","concat","process","REACT_APP_BASE_URL","WebsocketView","generationConfig","prompts","setPrompts","prompt","request_id","isStop","setIsStop","autoContinue","setAutoContinue","isWaiting","setIsWaiting","isStreaming","setIsStreaming","isQueued","setIsQueued","isContinuePrompt","setIsContinuePrompt","responseTimes","setResponseTimes","lastResponseTime","setLastResponseTime","nonce","setNonce","executionStart","setExecutionStart","autoScroll","setAutoScroll","isError","setIsError","errorText","setErrorText","sendPrompt","abortRequest","updatePrompt","index","findIndex","item","scrollToText","_generationConfig$req","_generationConfig$req2","map","send","stringify","generation_config","only_new_tokens","stream_response","scrollLock","setTimeout","WebsocketManager","_generationConfig$req3","console","log","eventsHash","reduce","res","_eventsHash$prompt$re","text","_eventsHash$prompt$re2","_generationConfig$req4","_eventsHash$prompt$re3","_eventsHash$prompt$re4","isAllEos","every","is_eos","error","warn","connetionId","GenerationConfig","splice","removePrompt","CFormTextarea","invalid","rows","CFormLabel","htmlFor","overflow","whiteSpace","time","i","CBadge","shape","_ref4","resetPrompt","Timer","total","_ref5","PromptResponse"],"sourceRoot":""}